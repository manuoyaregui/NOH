# ‚öôÔ∏è Reglas de CursorAI para el proyecto *No One's Heart*

Estas reglas est√°n dise√±adas para guiar a CursorAI en la implementaci√≥n t√©cnica y creativa del proyecto *No One's Heart*, asegurando coherencia con su visi√≥n narrativa, est√©tica y mec√°nica.

---

## üîß Reglas T√©cnicas

1. **Motor de desarrollo**: Todo debe realizarse en **Godot 4.4** usando **GDScript**.

2. **Estilo visual**: Tercera persona en un mundo 3D(2.5D). Los enemigos se representan como **Sprite3D** con `billboard` activado, para simular una est√©tica 2.5D.

3. **Modularidad**: Cada sistema (combate, mapa, UI, IA, narrativa) debe implementarse como **m√≥dulo autocontenible**, con clases exportables y reutilizables.

4. **Persistencia**: Todos los datos de jugador y progresi√≥n deben guardarse en **archivos JSON** (`progreso_global.json`, `run_actual.json`, etc.).

5. **Traducci√≥n**: Todos los textos visibles deben cargarse desde un archivo `.csv` llamado `localization.csv` con columnas `key`, `en`, `es`. No debe haber texto hardcodeado.

6. **Sistema de idioma**:

   * Idioma por defecto: ingl√©s.
   * Debe poder cambiarse en cualquier momento desde opciones.
   * La traducci√≥n debe reflejarse en tiempo real (sin reiniciar escena).

---

## üß† Reglas de IA

7. **Perfil de IA**: Los enemigos deben usar una de estas personalidades:

   * `AGRESIVO`: prioriza ataques directos.
   * `DEFENSIVO`: prioriza protecci√≥n o debuffs.
   * `T√ÅCTICO`: toma decisiones basadas en el estado del jugador.
   * `EQUILIBRADO`: toma decisiones variadas.

8. **Evaluaci√≥n contextual**: La IA no debe actuar aleatoriamente. Siempre debe evaluar salud, estados, stats del jugador y propia, y tipo de combate. Solo se comportar√° de manera aleatoria cuando todas las acciones generen el mismo resultado.

9. **Escalado**: La complejidad de decisiones debe escalar con el "nivel de oponente".

---

## üß™ Reglas de Combate

**Modelo de Turno (IMPORTANTE):**
El sistema de combate se basa en una estructura simult√°nea, no alternada. Esto significa:

* Primero, el jugador y el enemigo **eligen su acci√≥n al mismo tiempo**.
* Luego, se determina el **orden de ejecuci√≥n** (por prioridad, agilidad u otro modificador).
* Finalmente, ambas acciones se ejecutan en orden en el mismo turno.

Ejemplo: El jugador lanza un ataque r√°pido (alta prioridad), el enemigo lanza un ataque poderoso (baja prioridad). El ataque del jugador se resuelve primero.

10. **Controlador de combate**: Debe implementar una FSM adaptada a turnos simult√°neos con los siguientes estados:

* `InicioTurno`: Preparaci√≥n y reseteo de efectos temporales.
* `Elecci√≥nJugador`: El jugador elige su acci√≥n.
* `Elecci√≥nIA`: La IA elige su acci√≥n.
* `Resoluci√≥nTurno`: Se comparan ambas acciones y se ejecutan en orden definido por prioridad/agilidad.
* `FinTurno`: Se aplican consecuencias, se actualizan stats, y se pasa al siguiente ciclo.

11. **Tendencias (stats emocionales)**:

* Cada acci√≥n modifica el nivel de al menos uno de estos stats¬†`Osad√≠a`, `Dureza`, `Moral` y `Agilidad`.
* Estos stats afectan el resultado del combate y bloquean/permiten ciertas cartas/movimientos.

12. **Acciones y cartas**:

* Toda acci√≥n se ejecuta a trav√©s de una **carta** o **movimiento**.
* Las cartas deben tener campos: nombre, tipo, coste, efecto, condici√≥n especial, penalidad.
* Las consecuencias deben estar siempre equilibradas con la ventaja.

13. **Anti-spam**: No debe permitirse usar una misma acci√≥n infinitamente. Implementar restricciones por turno, fatiga, o costos adicionales.

---

## üó∫Ô∏è Reglas de Run y Mapa

14. **Nodos del mapa**: Todos deben implementarse como instancias del tipo `NodoDeMapa`, que incluyan tipo, √≠cono, conexi√≥n, referencia a evento/combate.

15. **Guardado**:

* Guardar autom√°ticamente al elegir un nodo.
* Si el jugador muere, eliminar el archivo de guardado.
* No se permite reintentar combates anteriores (permadeath).

---

## üé® Reglas de Arte y UX

16. **Est√©tica**: Visual oscura, melanc√≥lica y simbolista. Inspiraci√≥n: carboncillo, ilustraci√≥n artesanal, luz tenue y texturas naturales.

17. **Sonido**: Uso de piano ambiental, distorsiones suaves, silencio como herramienta emocional, efectos minimalistas.

18. **UI**: Minimalista. Mostrar siempre:

* Stats emocionales con iconograf√≠a.
* Intenci√≥n del enemigo.
* Descripci√≥n de cada carta al pasar el cursor.

19. **Tutorial**: Incluir una run guiada para ense√±ar mec√°nicas de forma progresiva, dividida en nodos fijos.

---

## ‚ùå Restricciones clave

20. **No improvisar mec√°nicas**: No crear nuevas reglas o sistemas si no est√°n definidos en el GDD. Solo sugerir mejoras si se pide expl√≠citamente.

21. **No texto hardcodeado**: Ning√∫n string debe estar escrito en el c√≥digo fuente sin pasar por `localization.csv`.

22. **No l√≥gica monol√≠tica**: No juntar controladores m√∫ltiples (combate + UI + l√≥gica de cartas). Separar todo en scripts peque√±os y bien nombrados.

---

Este set de reglas garantiza que CursorAI trabaje en sincron√≠a con la narrativa, las mec√°nicas y el ritmo de desarrollo de *No One's Heart*.
